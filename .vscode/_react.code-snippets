{
	// https://code.visualstudio.com/docs/editor/userdefinedsnippets#_variables
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Generate props interface": {
		"prefix": "-interface-IProps",
		"scope": "typescriptreact",
		"body": [
			"interface IProps {",
      "  $1",
			"}"
		],
		"description": "Generate props interface"
	},

	"Generate const t = useTranslation(translation)": {
		"prefix": "-useTranslation",
		"scope": "typescriptreact",
		"body": [
      "const t = useTranslation(translation)",
		],
		"description": "Generate const t = useTranslation(translation)"
	},

	"Generate {  }: IProps": {
		"prefix": "-IProps",
		"scope": "typescriptreact",
		"body": [
      "{ $1 }: IProps",
		],
		"description": "Generate {  }: IProps"
	},

	"Generate className={classes.}": {
		"prefix": "-className",
		"scope": "typescriptreact",
		"body": [
      "className={classes.$1}",
		],
		"description": "Generate className={classes.}"
	},

	"Generate div": {
		"prefix": "-div",
		"scope": "typescriptreact",
		"body": [
      "<div className={classes.$1}> id='$TM_FILENAME_BASE'",
      "  $2",
      "</div>"
		],
		"description": "Generate div"
	},

	"Generate Open JSX Tags": {
		"prefix": "-tag",
		"scope": "typescriptreact",
		"body": [
      "< $1 />"
		],
		"description": "Generate Open JSX Tags"
	},

	"Setup React Component Typescript Mantine": {
		"prefix": "-react",
		"scope": "typescriptreact",
		"body": [
      "/**",
      " * @copyright Copyright © ${CURRENT_YEAR} GUIHO Technologies as represented by Cristóvão GUIHO. All Rights Reserved.",
      " */",
			"",
			"import { Box } from '@mantine/core'",
			"",
			"export { ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} }",	
			"export type {  }",	
			"",	
			"function ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}() {",
			"",	
			"  // const t = useTranslation(translation)",
			"  const en = {",
			"    ",	
			"  }",
			"",	
			"const t = en",	
			"",	
			"  return <Box id='$TM_FILENAME_BASE'>",
			"    ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} $1",
			"  </Box>",	
			"}",
			"",				
			"const translation = {",
			" en: {},",
			"",	
			" pt: {},",
			"",	
			" fr: {},",
			"",	
			" es: {},",
			"}",
			""
		],
		"description": "Setup React Component Typescript Mantine."
	},

	"Setup React Compoennet Typescript CSS Modules": {
		"prefix": "-react-css-modules",
		"scope": "typescriptreact",
		"body": [
      "/**",
      " * @copyright Copyright © ${CURRENT_YEAR} GUIHO Technologies as represented by Cristóvão GUIHO. All Rights Reserved.",
      " */",
      "",
			"import classes from './${1:${TM_FILENAME_BASE}.module.css}'",
			"import style from './${TM_FILENAME_BASE}.module.css?inline'",
			"",
			"export { ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} }",	
			"export type {  }",	
			"",	
			"function ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}() {",
			"",	
			"  // const t = useTranslation(translation)",
			"  const en = {",
			"    ",	
			"  }",
			"",	
			"const t = en",	
			"",	
			"  return <>",
			"    <style dangerouslySetInnerHTML={{ __html: style }} />",
			"    ",	
			"    <div className={classes.${TM_FILENAME_BASE/-(.)/${1:/upcase}/g}} id='$TM_FILENAME_BASE'>",	
			"      $2",	
			"      ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}",
			"    </div>",
			"  </>",	
			"}",
			"",				
			"const translation = {",
			" en: {},",
			"",	
			" pt: {},",
			"",	
			" fr: {},",
			"",	
			" es: {},",
			"}",
			""
		],
		"description": "Setup React Compoennet Typescript CSS Modules."
	},

	"Setup React Router v7 Full Page Typescript": {
		"prefix": "-react-router-v7-page",
		"scope": "typescriptreact",
		"description": "Setup React Router v7 Full Page Typescript.",
		"body": [
      "/**",
      " * @copyright Copyright © ${CURRENT_YEAR} GUIHO Technologies as represented by Cristóvão GUIHO. All Rights Reserved.",
      " */",
      "",
			"import type { Route } from './+types/$TM_FILENAME_BASE'",
      "",
			"import { parseLanguage } from '#root/services/language/language-parse.js'",
			"import { switchTranslation } from '#root/services/language/language-provider.js'",
			"",
			"import classes from './${1:${TM_FILENAME_BASE}.module.css}'",
			"import style from './${TM_FILENAME_BASE}.module.css?inline'",
			"",
			"export { loader, meta }",	
			"export type {  }",
			"export default ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}",	
			"",	
			"async function loader({ request }: Route.LoaderArgs) {",
			"  const languagePromise = parseLanguage(request)",
      "",
      "  return { language: await languagePromise }",
      "}",
      "",
      "function meta({ data }: Route.MetaArgs) {",
      "  const t = switchTranslation(translation, data.language)",
      "  return [{ title: t.meta.title }, { name: 'description', content: t.meta.description }]",
			"}",
			"",	
			"function ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}({ }: Route.ComponentProps) {",
			"",	
			"  // const t = useTranslation(translation)",
			"  const en = {",
			"    ",	
			"  }",
			"",	
			"const t = en",	
			"",	
			"  return <>",
			"    <style dangerouslySetInnerHTML={{ __html: style }} />",
			"    ",	
			"    <div className={classes.${TM_FILENAME_BASE/-(.)/${1:/upcase}/g}} id='$TM_FILENAME_BASE'>",	
			"      $2",	
			"      ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}",
			"    </div>",
			"  </>",	
			"}",
			"",				
			"const translation = {",
			"  en: {",
      "    meta: {",
      "      title: '${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} | GUIHO',",
      "      description: '',",
      "    },",
      "  },",
      "",
      "  pt: {",
      "    meta: {",
      "      title: '${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} | GUIHO',",
      "      description: '',",
      "    },",
      "  },",
      "",
      "  fr: {",
      "    meta: {",
      "      title: '${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} | GUIHO',",
      "      description: '',",
      "    },",
      "  },",
      "",
      "  es: {",
      "    meta: {",
      "      title: '${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} | GUIHO',",
      "      description: '',",
      "    },",
      "  },",
			"}",
			
			""
		],
	},

	"Setup React Router v7 Full Page Typescript Without CSS": {
		"prefix": "-react-router-v7-page-no-css",
		"scope": "typescriptreact",
		"description": "Setup React Router v7 Full Page Typescript Without CSS.",
		"body": [
      "/**",
      " * @copyright Copyright © ${CURRENT_YEAR} GUIHO Technologies as represented by Cristóvão GUIHO. All Rights Reserved.",
      " */",
      "",
			"import type { Route } from './+types/$TM_FILENAME_BASE'",
      "",
			"import { parseLanguage } from '#root/services/language/language-parse.js'",
			"import { switchTranslation } from '#root/services/language/language-provider.js'",
			"",
			"export { loader, meta }",	
			"export type {  }",
			"export default ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}",	
			"",	
			"async function loader({ request }: Route.LoaderArgs) {",
			"  const languagePromise = parseLanguage(request)",
      "",
      "  return { language: await languagePromise }",
      "}",
      "",
      "function meta({ data }: Route.MetaArgs) {",
      "  const t = switchTranslation(translation, data.language)",
      "  return [{ title: t.meta.title }, { name: 'description', content: t.meta.description }]",
			"}",
			"",	
			"function ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}({ }: Route.ComponentProps) {",
			"",	
			"  // const t = useTranslation(translation)",
			"  const en = {",
			"    ",	
			"  }",
			"",	
			"const t = en",	
			"",	
			"  return <>${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}</>",
			"}",
			"",				
			"const translation = {",
			"  en: {",
      "    meta: {",
      "      title: '${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} | GUIHO',",
      "      description: '',",
      "    },",
      "  },",
      "",
      "  pt: {",
      "    meta: {",
      "      title: '${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} | GUIHO',",
      "      description: '',",
      "    },",
      "  },",
      "",
      "  fr: {",
      "    meta: {",
      "      title: '${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} | GUIHO',",
      "      description: '',",
      "    },",
      "  },",
      "",
      "  es: {",
      "    meta: {",
      "      title: '${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} | GUIHO',",
      "      description: '',",
      "    },",
      "  },",
			"}",
			
			""
		],
	},

	"Setup React Page Typescript": {
		"prefix": "-react-without-translation",
		"scope": "typescriptreact",
		"body": [
      "/**",
      " * @copyright Copyright © ${CURRENT_YEAR} GUIHO Technologies as represented by Cristóvão GUIHO. All Rights Reserved.",
      " */",
      "",
			"import classes from './${1:${TM_FILENAME_BASE}.module.css}'",
			"import style from './${TM_FILENAME_BASE}.module.css?inline'",
			"",
			"export { ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g} }",
			"export type {  }",	
			"",			
			"function ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}() {",
			"  return <>",
			"    <style dangerouslySetInnerHTML={{ __html: style }} />",
			"    ",	
			"    <div className={classes.${TM_FILENAME_BASE/-(.)/${1:/upcase}/g}} id='$TM_FILENAME_BASE'>",	
			"      $2",	
			"      ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}",
			"    </div>",
			"  </>",	
			"}",
			""
		],
		"description": "Setup React Page Typescript."
	},

	"Get Mantine Box conponenet": {
		"prefix": "-box",
		"scope": "typescriptreact",
		"body": [
			"<Box$1 id='$TM_FILENAME_BASE'>",	
			"  $2",
			"  ${TM_FILENAME_BASE/(^|-|_)([a-z])/${2:/upcase}/g}",
			"</Box>",
			""
		],
		"description": "Get Mantine Box conponenet."
	},



}